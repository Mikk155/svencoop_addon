@BaseClass = KeyValues
[
	// para activar/desactivar la entidad
	targetname(target_source) : "Name"
	
	// para triggerear una entidad cuando las condiciones se cumplan
	target(target_destination) : "Target"
	
	// para matar una entidad cuando las condiciones se cumplan
	killtarget(target_destination) : "Kill Target"
	
	// esperar estos segundos para hacer algo de lo de arriba
	delay(string) : "Delay Before Trigger" : "0"
	
	// para triggerear una entidad cada vez que un jugador cumpla las condiciones (keep !activator Pplayer)
	firetarget(target_destination) : "True-case-target (!activator)"
	
	// verificar cada frames
	intervalframes(string) : "Check-interval (seconds)" : "0.1"
	
	// iniciar apagado
	spawnflags(flags) =
	[
		1: "Start Off" : 0
		
		// si es constant. luego de cumplir sus condiciones. 
		// la entidad usara la keyvalue "wait" como tiempo de pausa.
		// dejara de funcionar hasta que los segundos de "wait" hayan pasado.
		
		// si no es constant. luego de cumplir sus condiciones. 
		// la entidad dejara de funcionar hasta que sea triggereada de nuevo.
		2: "Constant" : 0
	]
	
	// Esperar antes de reactivar.
	wait(string) : "Delay Before Restart"
	
	// condicion 1
	inout(choices) : "Zone Type (IN/OUT)" : 0 =
	[
		// El jugador debe estar dentro del brush
		0 : "Player is Inside the brush"
		
		// El jugador debe estar fuera del brush
		1 : "Player is Outside the brush"
	]
	
	// condicion 2
	condition(choices) : "Condition" : 0 =
	[
		// Ninguna (solo condicion 1)
		0 : "None"
		
		// Porcentaje (especificar porcentaje abajo)
		1 : "Percentage Players. (Condition Specify)"
		
		// Tiempo que el jugador debe permanecer dentro (especificar tiempo abajo)
		2 : "Wait delay. (Condition Specify)"
		
		// verificar municion del jugador es menor a su maxima (especificar municion abajo)
		3 : "Has not full ammo of (Condition Specify)"
		
		// verificar arma del jugador (especificar arma abajo)
		5 : "Has weapon (Condition Specify)"
		
		// verificar vida del jugador menor a (especificar vida abajo)
		6 : "Health is less than (Condition Specify)"
		
		// verificar vida del jugador mayor a (especificar vida abajo)
		7 : "Health is greater than (Condition Specify)"
		
		// verificar traje del jugador menor a (especificar traje abajo)
		8 : "Armor is less than (Condition Specify)"
		
		// verificar traje del jugador mayor a (especificar traje abajo)
		9 : "Armor is greater than (Condition Specify)"
		
		// recibe da√±o
		10 : "Player TakeDamage"
		
		// Mantener precionado CTRL.
		11 : "IN_DUCK (Player Hold CTRL-key)"
	]
	
	// condicion 3 (relacionado a condicion 2)
	check_condition(string) : "Condition Specify"
	
	// Dar efecto al !activator mientras las condiciones son true.
	truecase(choices) : "True Case" : 0 =
	[
		// No dar efecto.
		0 : "None"
		
		// Pasar el valor en string de la entidad a el script. copiando la key lo hara mas-
		// -customizable dejandome poner el efecto que quiera y simplemente pegarlo en el script
		FL_NOTARGET : "FL_NOTARGET (player notarget)"
		
		GiveAmmo : "give ammo (Specify value)"
	]
	
	// valor extra (opcional) para efectos que lo necesitan como aumentar vida, dar glow, dar ammo etc.
	true_case_value(string) : "Condition Value"
]

@BaseClass base(KeyValues) = PointValues
[
	// eleccion de hullsizes o radius. 
    minhullsize(string) : "minhullsize (X Y Z)"
	maxhullsize(string) : "maxhullsize (X Y Z)"
    radius(string) : "Entity radius"
]

// version point entity. 
@PointClass Base(PointValues) = game_player_condition : "Player Condition"[]

// si el model de la entidad empieza con "*" sera un SolidClass.
@SolidClass Base(KeyValues) = game_player_condition : "Player Condition"[]